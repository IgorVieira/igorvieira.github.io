<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Igor Vieira</title>
    <description>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 28 Mar 2017 20:58:27 -0300</pubDate>
    <lastBuildDate>Tue, 28 Mar 2017 20:58:27 -0300</lastBuildDate>
    <generator>Jekyll v3.4.2</generator>
    
      <item>
        <title>Talk about arrow functions again! </title>
        <description>&lt;p&gt;Why will you talk about arrow function? Everybody knows about this, everbody knows in this way is more simple to write a function, but somepeople don’t know how powerfull write and use arrow functions, we go to first example&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// we have a normaly function


function iDOSomething (name) {
 Return console.log (&quot;My name is:&quot; + name);
}



console.log (iDoSomething ('Igor'))

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now we go to rewrite this same function&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
IDoSomething = (name) =&amp;gt; `My name is $ {name}`;
Console.log (iDoSomething ('Igor'))


&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If your note, arrow functions is a sintaxe sugar, whats this? Is more easy to write a function less verbose and more simple for you or other people understand what I you do, for exemplo a good way to read a code
is a code in your read is easy, just like baby steps, go back to code, step by step&lt;/p&gt;

&lt;p&gt;iDoSomething - The name about my function&lt;/p&gt;

&lt;p&gt;= (Name) =&amp;gt; - I expect the name in my function&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;My name is $ {name}&lt;/code&gt; - The return about my function&lt;/p&gt;

&lt;p&gt;Just like a flux data, simple to read and simple to write, good code need to be just like this.&lt;/p&gt;

&lt;p&gt;But you need to pay attention, look over this way to write, you see another detail, I write a function and do not pass to return, note, I wrote in one line, but if you have a block in the arrow function, you need to pass this return, the otherwise you receive the undefine because you pass and this function receive the params but not return the same value in this function try to return something and this something is undefine.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;iDoSomething = (name) =&amp;gt; {
`My name is $ {name}`
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;console.log (iDoSomething ('Igor'))

// undefine

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In real is possible write the diferents way:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;const iDoSomething =(name)=&amp;gt; { ...}
iDoSomething =(name)=&amp;gt; {...}

const calc = {
    mult:(x,y) =&amp;gt; x * y,
    ...
 }

console.log(`Possible multiply: ${calc.mult(5,10)}`)



&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In the end this arrow function, is the syntax sugar, is the way more easy to read and write, perfect to use with promises and the little way to distinct, organize and standardize your code for the other programers, and is possible to write just like a describe function, is possible to build a stack for resolve functions, especially if you have a stack of asynchronous functions,but the big power about this way to write is organization and the simplicity of writing code, probably you work in team and other people read you do, so… in the end you do not write for you, you Write for the others, so write a good code just like baby steps, thank you for your time and see you soon!&lt;/p&gt;
</description>
        <pubDate>Tue, 28 Mar 2017 00:00:00 -0300</pubDate>
        <link>http://localhost:4000/talk-about-arrow-function-again</link>
        <guid isPermaLink="true">http://localhost:4000/talk-about-arrow-function-again</guid>
        
        
        <category>Javascript</category>
        
      </item>
    
      <item>
        <title>A new Step - Variables! </title>
        <description>&lt;p&gt;Today I proposed my self study JS, again, but I proposed to use the new features just like let, const, arrow function, template string, class, map, filter and other awesome functions and it’s not new, I use, but some people dont and is not a problem, but I have a problem in seeing simple applications, like baby steps for you to see in “real life” and more, why you need to use these new features, for example, var is different from let and cont&lt;/p&gt;

&lt;p&gt;var is a global variable
let specified a scope
And const normally use for a situation is no have a change of you have
but is possible use you have for other stuff’s&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/IgorVieira/igorvieira.github.io/blob/master/_images/variables.jpg?raw=true&quot; alt=&quot;Variable&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So let in go for a example&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var name = &quot;Igor&quot;


const saySomething = (name) =&amp;gt; {
  
  let hey = 'Hey'
  
  return `${hey} ${name}`;

}

console.log(saySomething(name))



&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This is a function and I call this function “saySomething” this function have one paramter and for const is a perfect use, no have changes because this function receive one paramter and return one value, one value in and one value out, but inside in this function has a let variable
and this variable receive a string, this string return on template string in your value and the value pass in paramter but
is a one value, one in one out, for now I call this function inside a console.log and print “Hey Igor”
this is beautifull!&lt;/p&gt;

&lt;p&gt;But I prove some points is possible call a pass and call again one variable var, and const is appropriate where i create a function in which it has the same return, however if a call a let variable?&lt;/p&gt;

&lt;p&gt;This variable return a error, because this variable belongs to a one scope, saySomething()&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//code
...

console.log(hey)

//Error: &quot;ReferenceError: hey is not defined&quot;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So Let belongs to a scope, var is now global and const is for a specific variable where i receive a value and i no have possibilities to change this value but is possible work in this value, var is terrible variable if you stop for think, is possible manipulated in all part in script and change your value, horever let your have warranty about value inside in your variable is possible work inside a function and return in a const function for exemplo.&lt;/p&gt;

&lt;p&gt;I see greats changes for work now:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Is possible use imutable variables if your need use this values in all script with const;&lt;/li&gt;
  &lt;li&gt;Is possible work let variables with low riks for change and return this inside a function or another scope if, try e etc&lt;/li&gt;
  &lt;li&gt;Now var depends a lot, since var is now synonymous with something volatile, for example, const declared as an array, receives values, is still an array even if its values ​​inside the array change, it still continues an array so i can replace var by const and ensure that it remains an array&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//Just Const


const foo = []

let bar = &quot;Hey&quot;


foo.push(bar)
console.log(foo)
//[&quot;Hey&quot;]



foo.push(bar)
console.log(foo)
//[&quot;Hey&quot;,&quot;Hey&quot;]



foo.splice(1,1)
console.log(foo)
//[&quot;Hey&quot;]

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//Const if I try change your type

const foo = []
console.log(typeof foo)

foo = &quot;&quot;

console.log(typeof foo)

//&quot;TypeError: Assignment to constant variable.&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//Var be a var :p

var foo = []
console.log(typeof foo)
//object


foo = &quot;&quot;
console.log(typeof foo)
// string
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;For now I belive is a good first baby step and in this week I promise  write another post about new features, next step we will talk more about arrow functions!&lt;/p&gt;

&lt;p&gt;Thanks and see you soon!&lt;/p&gt;
</description>
        <pubDate>Thu, 23 Mar 2017 00:00:00 -0300</pubDate>
        <link>http://localhost:4000/a-new-step</link>
        <guid isPermaLink="true">http://localhost:4000/a-new-step</guid>
        
        
        <category>Javascript</category>
        
      </item>
    
      <item>
        <title>Hey and Welcome! =] </title>
        <description>&lt;p&gt;Today, I ‘m completing three months in Belo Horizonte is a long history, but I simplificading for you, I was living in Goiânia a Capital of state Goiás, in Brazil, is a nice city but a little poor in oportunities for new tecnologies, is not impossible but is hard find a job  people work with Nodejs, JS, Ruby or React, Ember, Angular and other languages and frameworks, i love Goiânia, but is true,
sorry guys ¯_(ツ)_/¯&lt;/p&gt;

&lt;p&gt;I moved on from Goiânia , and I living BH, its a form I call Belo Horizonte, is more simple rsrs so here, in BH I work in Lett insights a little big startup rsrs, i love the place, I like the people, is very cool,
and I love this city, BH, is more spensive but is great place and I have good neighbors and i  maked good friends, the street on i live, exist a lot good restaurants, japanese food, hamburguers and pizza’s I miss a place just like a coffee shop but its ok!
Today I ‘m pass my day studing and building a setup for a new project for my cousin, I will build a site in PHP for the offices lawyers, its very nice code a site again, my plans for this next days is build this site, study for Mongodb University, study more, go out with my new friends and talk more with you guys!&lt;/p&gt;

&lt;p&gt;I will try, is no promise, but I  will try post one blogpost for day
so…
See you soon! =]&lt;/p&gt;
</description>
        <pubDate>Sat, 18 Mar 2017 00:00:00 -0300</pubDate>
        <link>http://localhost:4000/hey-and-welcome</link>
        <guid isPermaLink="true">http://localhost:4000/hey-and-welcome</guid>
        
        
        <category>Lifestyle</category>
        
      </item>
    
  </channel>
</rss>
